--1.---------------------------------------------------------------
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "학생 주소"
FROM TB_STUDENT
ORDER BY "학생 이름";

--2.---------------------------------------------------------------
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN ='Y'
ORDER BY SUBSTR(STUDENT_SSN,1,6) DESC;

--3.---------------------------------------------------------------
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_ADDRESS,1,3) IN ('강원도', '경기도')
AND EXTRACT(YEAR FROM ENTRANCE_DATE)<2000
ORDER BY 학생이름;

--4.---------------------------------------------------------------
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_DEPARTMENT
						WHERE DEPARTMENT_NAME = '법학과')
ORDER BY SUBSTR(PROFESSOR_SSN,1,6);

--5.---------------------------------------------------------------
SELECT STUDENT_NO, TO_CHAR(POINT,'FM9.00') 학점
FROM TB_GRADE
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC;
-- # 학점 같으면 하건이 낮은 학생부터 표시 x
-- 풀이-----------------------------------------
SELECT STUDENT_NO, TO_CHAR(POINT, 'FM9.00') 학점
FROM TB_GRADE
WHERE TERM_NO='200402'
AND CLASS_NO = 'C3118100'
ORDER BY 학점 DESC, STUDENT_NO;
--6.---------------------------------------------------------------
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME;
--#확인필요

--7.---------------------------------------------------------------
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

--8.---------------------------------------------------------------
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

--!! 풀이 !!---------------------------------------------------------
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

--9.---------------------------------------------------------------
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
					   FROM TB_DEPARTMENT
					   WHERE DATEGORY = '인문사회');
--#실행x
--!! 풀이 !!---------------------------------------------------------
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR P USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';
-- ORA-00918: column ambiguously DEFINED
--> 컬럼의 정의가 애매모호하다.
--> 중복되는 컬럼명을 구분할 수 있도록
-- 테이블명.컬럼명 또는 별칠.컬럼명으로 구분

--10.---------------------------------------------------------------
SELECT STUDENT_NO , STUDENT_NAME, ROUND(AVG(POINT),1) "전체 평점"
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
					  FROM TB_DEPARTMENT
					  WHERE DEPARTMENT_NAME = '음악학과')
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY 1;

--!! 풀이 !!---------------------------------------------------------
SELECT STUDENT_NO "학번", STUDENT_NAME "학생 이름", 
		ROUND(AVG(POINT),1) "전체 평점" 
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY "학번";

--11.---------------------------------------------------------------
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO )
WHERE STUDENT_NO = 'A313047';

--12.---------------------------------------------------------------
SELECT STUDENT_NAME, TERM_NO "TERM_NAME"
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE TERM_NO LIKE '2007%'
AND CLASS_NO = (SELECT CLASS_NO
				FROM TB_CLASS
				WHERE CLASS_NAME = '인간관계론');

--13.---------------------------------------------------------------
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE PREATTENDING_CLASS_NO IS NULL
AND DEPT
-- 문제이해 X

--!! 풀이 !!---------------------------------------------------------
--1)
SELECT CLASS_NAME, DEPARTMENT_NAME, PROFESSOR_NO
FROM TB_CLASS
LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;
--2)
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY ='예체능'
AND CLASS_NO NOT IN 
(SELECT CLASS_NO FROM TB_CLASS_PROFESSOR); 

SELECT COUNT(*) FROM TB_CLASS;

--14.---------------------------------------------------------------
 
SELECT STUDENT_NAME 학생이름, NVL(COACH_PROFESSOR_NO, '지도교수 미지정') 지도교수
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_DEPARTMENT
						WHERE DEPARTMENT_NAME ='서반아어학과')
ORDER BY STUDENT_NO;

--15.---------------------------------------------------------------
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", AVG(POINT) 평점
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0
ORDER BY 1;


--16.---------------------------------------------------------------
SELECT CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT),8)
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
GROUP BY CLASS_NO, CLASS_NAME;
HAVING DEPARTMENT_NAME = '환경조경학과';
HAVING DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_DEPARTMENT	
						WHERE DEPARTMENT_NAME = '환경조경학과');
-- 다시 풀어야함
--17.---------------------------------------------------------------
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						FROM TB_STUDENT
						WHERE STUDENT_NAME = '최경희');


--18.---------------------------------------------------------------
--SELECT STUDENT_NO, STUDENT_NAME
--FROM TB_STUDENT
--JOIN TB_GRADE USING(STUDENT_NO)
--WHERE AVG(POINT) = (SELECT STUDENT_NAME
--						FROM TB_STUDENT
--						WHERE POINT
--!! 풀이 !!---------------------------------------------------------
--1)				
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
	FROM TB_GRADE
	JOIN TB_STUDENT USING(STUDENT_NO)
	JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
	WHERE DEPARTMENT_NAME = '국어국문학과'
	GROUP BY STUDENT_NO, STUDENT_NAME
	ORDER BY 평점 DESC)
WHERE ROWNUM =1;
--2)
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
	FROM TB_GRADE
	JOIN TB_STUDENT USING(STUDENT_NO)
	WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
							FROM TB_DEPARTMENT	
							WHERE DEPARTMENT_NAME = '국어국문학과')
	GROUP BY STUDENT_NO, STUDENT_NAME
	ORDER BY 평점 DESC)
WHERE ROWNUM =1;
--19.---------------------------------------------------------------

--!! 풀이 !!---------------------------------------------------------
SELECT DEPARTMENT_NAME, ROUND(AVG(POINT),1) 전공평점
FROM TB_DEPARTMENT
JOIN TB_CLASS USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY
					FROM TB_DEPARTMENT
					WHERE DEPARTMENT_NAME = '환경조경학과')
AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY 1;















